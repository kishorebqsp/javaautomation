<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="41169" started-at="2018-12-14T04:19:35Z" finished-at="2018-12-14T04:20:16Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="41169" started-at="2018-12-14T04:19:35Z" finished-at="2018-12-14T04:20:16Z">
      <class name="scripts.invalidlogin">
        <test-method status="PASS" signature="openapp()[pri:0, instance:scripts.invalidlogin@cc285f4]" name="openapp" is-config="true" duration-ms="26210" started-at="2018-12-14T09:49:35Z" finished-at="2018-12-14T09:50:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openapp -->
        <test-method status="FAIL" signature="invalid()[pri:1, instance:scripts.invalidlogin@cc285f4]" name="invalid" duration-ms="14" started-at="2018-12-14T09:50:01Z" finished-at="2018-12-14T09:50:01Z">
          <exception class="java.lang.Error">
            <message>
              <![CDATA[Unresolved compilation problem: fgehfyugfjjh cannot be resolved to a variable]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Error: Unresolved compilation problem: fgehfyugfjjh cannot be resolved to a variableat scripts.invalidlogin.invalid(invalidlogin.java:15)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Error -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid -->
        <test-method status="PASS" signature="closeapp(org.testng.ITestResult)[pri:0, instance:scripts.invalidlogin@cc285f4]" name="closeapp" is-config="true" duration-ms="14619" started-at="2018-12-14T09:50:01Z" finished-at="2018-12-14T09:50:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid status=FAILURE method=invalidlogin.invalid()[pri:1, instance:scripts.invalidlogin@cc285f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeapp -->
      </class> <!-- scripts.invalidlogin -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
